(function(p,i){"use strict";function c(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var s=c(p),u=c(i);class d{constructor(){this.patches=[]}add(...t){this.patches.push(...t)}remove(t){let[r]=this.patches.splice(this.patches.indexOf(l=>l==t),1);r()}removeAll(){let t=this.patches.splice(0,this.patches.length);for(let r=0;r<t.length;r++)t[r]()}}var n=new d;const{toggleLocalMute:f,toggleSelfMute:h}=s.default.findByProps("toggleLocalMute"),{getCurrentUser:g}=s.default.findByProps("getCurrentUser");function v(){const e=s.default.find(r=>r?.default?.displayName==="VoiceUser"),t=u.default.after("render",e.default.prototype,(r,l)=>{let a=l?.props?.value?l?.props?.value:l?.props?.children?.props?.children?.[1]?.props?.style?.backgroundImage?.split("/")?.[4],y=g()?.id;if(a){let U=l.props.onClick;l.props.onClick=function(o){if(!o.shiftKey)return U.call(this,o);o.preventDefault(),a==y?h():f(a)}}});n.add(t)}var m={onLoad(){v()},onUnload(){n.removeAll()}};return m})(cumcord.modules.webpack,cumcord.patcher);

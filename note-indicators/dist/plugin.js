(function(E,b,C,N){"use strict";function m(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}function x(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach(function(t){if(t!=="default"){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}}),r.default=e,Object.freeze(r)}var i=m(E),l=m(b),v=x(C),I=m(N);class S{constructor(){this.patches=[]}add(...r){this.patches.push(...r)}remove(r){let[t]=this.patches.splice(this.patches.indexOf(n=>n==r),1);t()}removeAll(){let r=this.patches.splice(0,this.patches.length);for(let t=0;t<r.length;t++)r[t]()}}var d=new S;i.default.findByProps("transitionTo");const c=i.default.findByProps("createElement"),h=i.default.findByProps("getNote","getName"),_=i.default.findByProps("isDispatching","dispatch"),A=i.default.findByProps("get","post"),D={DANGER:"#eb3d47",SECONDARY:"#8a8e93",SUCCESS:"#3aa360"};function O(e={}){return v.createElement("svg",{width:"50",height:"51",viewBox:"0 0 50 51",fill:"none",className:"ni--icon ni--thread-icon",style:{color:e.color}},v.createElement("path",{d:"M5 0.268311C2.24 0.268311 0 2.50581 0 5.26831V35.2683C0 38.0283 2.24 40.2683 5 40.2683H12.5V50.2683L22.4999 40.2683H44.9999C47.7624 40.2683 49.9999 38.0283 49.9999 35.2683V5.26831C49.9999 2.50581 47.7624 0.268311 44.9999 0.268311H5Z",fill:"currentColor"}))}const{TooltipContainer:P}=i.default.findByProps("TooltipContainer");function f({userId:e,kind:r=null}){let[t,n]=c.useState({note:null});function o(){let a=h.getNote(e);n({note:a})}return c.useEffect(()=>(o(),h.addChangeListener(o),()=>h.removeChangeListener(o)),[]),t?.note?.note?c.createElement("div",{className:"ni--container"},c.createElement(P,{key:`ni--tooltip-${e}`,text:`${t.note.note}`,position:"top",className:"ni--tooltip"},c.createElement("span",{className:`ni--icon-container ni--kind-${r}`},c.createElement(O,{color:D.SECONDARY})))):null}const{createElement:y,createContext:k}=c;function B(){const e=k(),r=i.default.find(a=>a?.default?.displayName==="AvatarWithText"),{default:t}=i.default.findByProps("DirectMessage"),n=l.default.after("render",t.prototype,function(a,s){return y(e.Provider,{value:this.props.user},s)}),o=l.default.before("default",r,([a])=>{a.decorators=[a.decorators,y(e.Consumer,{children:s=>s?y(f,{userId:s.id,kind:"direct-message"}):null})]});d.add(o,n)}const g=new Map;function L(e){const r=I.default.getReactInstance(e),t=[];let n=r;for(;n&&n.return&&typeof n.return.type!="string";)n.return.type&&t.push(n.return.type),n=n.return;return t}async function M(e=0){return new Promise(r=>setTimeout(r,e))}async function R(e,r){if(g.has(e))return g.get(e);let t;for(;;){const n=document.querySelectorAll(r);if(!n.length){await M(100);continue}for(const o of n)if(t=L(o).find(a=>a?.displayName==e),t)break;if(t)break}return g.set(e,t),t}const{createElement:T}=c;async function j(){const e=await R("MemberListItem",'[class*="member-"][class*="container-"]'),r=l.default.after("renderDecorators",e.prototype,function(t,n){try{const o=n?.props?.children;if(!Array.isArray(o))return;o.unshift(T(f,{userId:this.props.user.id,kind:"member-list"}))}catch(o){console.error("Error while patching MemberListItem:",o)}});d.add(r)}const{createElement:U}=c;function V(){const e=i.default.find(t=>t?.default?.displayName=="MessageHeader"),r=l.default.after("default",e,([t],n)=>{try{const o=n?.props?.username?.props?.children;if(!Array.isArray(o))return;o.splice(2,0,U(f,{userId:t.message.author.id,kind:"message-header"}))}catch(o){console.error("Error while patching MessageTimestamp:",o)}});d.add(r)}const{createElement:p,createContext:$}=c;function H(){const e=$(),r=i.default.find(a=>a?.default?.displayName==="VoiceUser"),t=cumcord.modules.webpack.findByProps("icons","usernameSpeaking"),n=l.default.after("render",r.default.prototype,(a,s)=>{let u=s?.props?.children?.props?.children?.[1]?.props?.style?.backgroundImage?.split("/")?.[4];return p(e.Provider,{value:u},s)}),o=l.default.after("renderIcons",r.default.prototype,(a,s)=>(console.log("renderIcons",s),window.returnValue=s,p(e.Consumer,{children:u=>{if(!u)return null;console.log("wow",u);let w=p(f,{userId:u,kind:"voice-user"});return s?(s.props.children.unshift(w),s):p("div",{className:t.icons},[w])}})));d.add(n,o)}var Y=()=>b.injectCSS(".ni--icon-container{display:flex;align-items:center;justify-content:center;margin-left:4px;border-radius:50%;cursor:pointer;width:20px;height:20px}.ni--container{display:flex;width:min-width}.ni--icon{display:flex;width:14px;height:14px}[class*=message-] [class*=headerText-],[class*=message-] h2[class*=header-],[class*=voiceUser-] [class*=content-]{display:flex;align-items:center}");function q(){const e=Y();d.add(e)}async function z(){try{let e=await A.get("/users/@me/notes");if(!e.ok)throw new Error(e?.body?.message);for(const r in e.body){let t=e.body[r];!t||_.dirtyDispatch({type:"USER_NOTE_LOADED",userId:r,note:{note:t,loading:!1}})}}catch(e){console.error("Unable to load notes!",e)}}var F={onLoad(){B(),j(),V(),H(),q(),z()},onUnload(){d.removeAll()}};return F})(cumcord.modules.webpack,cumcord.patcher,cumcord.modules.common.React,cumcord.utils);
